/*@import url('https://fonts.googleapis.com/css?family=Montserrat:100');*/
@import url('https://fonts.googleapis.com/css2?family=Cinzel:wght@412&display=swap');
 html, body, h1 {
	 padding: 0;
	 margin: 0;
	 font-family: 'Cinzel', serif;
}
 #app {
	 background: #0a0a0a;
	 height: 100vh;
	 width: 100%;
	 margin: 0;
	 padding: 0;
	 display: flex;
	 flex-direction: column;
	 justify-content: center;
	 align-items: center;
	 background: linear-gradient(rgba(10, 10, 10, .6), rgba(0, 0, 0, .9)), repeating-linear-gradient(0, transparent, transparent 2px, black 3px, black 3px), url('img/bg.jpg');
	 background-size: cover;
	 background-position: center;
	 z-index: 1;
}
 #wrapper {
	 text-align: center;
}
 .sub {
	 color: #64dcdc;
	 letter-spacing: 1em;
}
/* Our mixin positions a copy of our text directly on our existing text, while also setting content to the appropriate text set in the data-text attribute. */
 .glitch {
	 position: relative;
	 color: white;
	 font-size: 4em;
	 letter-spacing: 0.5em;
	/* Animation provies a slight random skew. Check bottom of doc for more information on how to random skew. */
	 animation: glitch-skew 1s infinite linear alternate-reverse;
}
 .glitch::before {
	 content: attr(data-text);
	 position: absolute;
	 top: 0;
	 left: 0;
	 width: 100%;
	 height: 100%;
	 left: 2px;
	 text-shadow: -2px 0 #ff00c1;
	/* Creates an initial clip for our glitch. This works in a typical top,right,bottom,left fashion and creates a mask to only show a certain part of the glitch at a time. */
	 clip: rect(44px, 450px, 56px, 0);
	/* Runs our glitch-anim defined below to run in a 5s loop, infinitely, with an alternating animation to keep things fresh. */
	 animation: glitch-anim 5s infinite linear alternate-reverse;
}
 .glitch::after {
	 content: attr(data-text);
	 position: absolute;
	 top: 0;
	 left: 0;
	 width: 100%;
	 height: 100%;
	 left: -2px;
	 text-shadow: -2px 0 #00fff9, 2px 2px #ff00c1;
	 animation: glitch-anim2 1s infinite linear alternate-reverse;
}
/* Creates an animation with 20 steaps. For each step, it calculates a percentage for the specific step. It then generates a random clip box to be used for the random glitch effect. Also adds a very subtle skew to change the 'thickness' of the glitch.*/
 @keyframes glitch-anim {
	 0% {
		 clip: rect(30px, 9999px, 57px, 0);
		 transform: skew(0.08deg);
	}
	 5% {
		 clip: rect(41px, 9999px, 40px, 0);
		 transform: skew(1deg);
	}
	 10% {
		 clip: rect(84px, 9999px, 84px, 0);
		 transform: skew(0.8deg);
	}
	 15% {
		 clip: rect(12px, 9999px, 17px, 0);
		 transform: skew(0.47deg);
	}
	 20% {
		 clip: rect(66px, 9999px, 67px, 0);
		 transform: skew(0.23deg);
	}
	 25% {
		 clip: rect(68px, 9999px, 9px, 0);
		 transform: skew(0.88deg);
	}
	 30% {
		 clip: rect(8px, 9999px, 12px, 0);
		 transform: skew(0.75deg);
	}
	 35% {
		 clip: rect(21px, 9999px, 83px, 0);
		 transform: skew(0.31deg);
	}
	 40% {
		 clip: rect(19px, 9999px, 54px, 0);
		 transform: skew(0.14deg);
	}
	 45% {
		 clip: rect(63px, 9999px, 82px, 0);
		 transform: skew(0.86deg);
	}
	 50% {
		 clip: rect(26px, 9999px, 18px, 0);
		 transform: skew(0.43deg);
	}
	 55% {
		 clip: rect(79px, 9999px, 48px, 0);
		 transform: skew(0.93deg);
	}
	 60% {
		 clip: rect(22px, 9999px, 17px, 0);
		 transform: skew(0.19deg);
	}
	 65% {
		 clip: rect(28px, 9999px, 67px, 0);
		 transform: skew(0.34deg);
	}
	 70% {
		 clip: rect(69px, 9999px, 37px, 0);
		 transform: skew(1deg);
	}
	 75% {
		 clip: rect(25px, 9999px, 64px, 0);
		 transform: skew(0.67deg);
	}
	 80% {
		 clip: rect(97px, 9999px, 27px, 0);
		 transform: skew(0.75deg);
	}
	 85% {
		 clip: rect(11px, 9999px, 66px, 0);
		 transform: skew(0.23deg);
	}
	 90% {
		 clip: rect(70px, 9999px, 31px, 0);
		 transform: skew(0.99deg);
	}
	 95% {
		 clip: rect(83px, 9999px, 6px, 0);
		 transform: skew(0.28deg);
	}
	 100% {
		 clip: rect(75px, 9999px, 71px, 0);
		 transform: skew(0.69deg);
	}
}
 @keyframes glitch-anim2 {
	 0% {
		 clip: rect(13px, 9999px, 22px, 0);
		 transform: skew(0.74deg);
	}
	 5% {
		 clip: rect(74px, 9999px, 82px, 0);
		 transform: skew(0.34deg);
	}
	 10% {
		 clip: rect(25px, 9999px, 76px, 0);
		 transform: skew(0.57deg);
	}
	 15% {
		 clip: rect(94px, 9999px, 31px, 0);
		 transform: skew(0.63deg);
	}
	 20% {
		 clip: rect(100px, 9999px, 54px, 0);
		 transform: skew(0.94deg);
	}
	 25% {
		 clip: rect(81px, 9999px, 36px, 0);
		 transform: skew(0.33deg);
	}
	 30% {
		 clip: rect(93px, 9999px, 19px, 0);
		 transform: skew(0.08deg);
	}
	 35% {
		 clip: rect(30px, 9999px, 94px, 0);
		 transform: skew(0.44deg);
	}
	 40% {
		 clip: rect(99px, 9999px, 44px, 0);
		 transform: skew(0.84deg);
	}
	 45% {
		 clip: rect(66px, 9999px, 12px, 0);
		 transform: skew(1deg);
	}
	 50% {
		 clip: rect(71px, 9999px, 32px, 0);
		 transform: skew(0.8deg);
	}
	 55% {
		 clip: rect(54px, 9999px, 29px, 0);
		 transform: skew(1deg);
	}
	 60% {
		 clip: rect(27px, 9999px, 38px, 0);
		 transform: skew(0.86deg);
	}
	 65% {
		 clip: rect(38px, 9999px, 56px, 0);
		 transform: skew(0.55deg);
	}
	 70% {
		 clip: rect(56px, 9999px, 85px, 0);
		 transform: skew(0.51deg);
	}
	 75% {
		 clip: rect(6px, 9999px, 56px, 0);
		 transform: skew(0.79deg);
	}
	 80% {
		 clip: rect(63px, 9999px, 30px, 0);
		 transform: skew(0.9deg);
	}
	 85% {
		 clip: rect(60px, 9999px, 26px, 0);
		 transform: skew(0.43deg);
	}
	 90% {
		 clip: rect(31px, 9999px, 24px, 0);
		 transform: skew(0.26deg);
	}
	 95% {
		 clip: rect(27px, 9999px, 82px, 0);
		 transform: skew(0.8deg);
	}
	 100% {
		 clip: rect(91px, 9999px, 89px, 0);
		 transform: skew(0.87deg);
	}
}
 @keyframes glitch-skew {
	 0% {
		 transform: skew(3deg);
	}
	 10% {
		 transform: skew(-1deg);
	}
	 20% {
		 transform: skew(-2deg);
	}
	 30% {
		 transform: skew(-2deg);
	}
	 40% {
		 transform: skew(5deg);
	}
	 50% {
		 transform: skew(4deg);
	}
	 60% {
		 transform: skew(5deg);
	}
	 70% {
		 transform: skew(-2deg);
	}
	 80% {
		 transform: skew(5deg);
	}
	 90% {
		 transform: skew(1deg);
	}
	 100% {
		 transform: skew(-2deg);
	}
}
 